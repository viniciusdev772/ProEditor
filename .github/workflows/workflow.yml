name: Build and Release APK

on:
  push:
    branches:
      - marketpro # Monitorar a branch marketpro
      - proeditor # Monitorar a branch proeditor

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Fazer checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache de pacotes Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configurar SDK do Android
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3
          cmake-version: 3.10.2

      - name: Conceder permissão de execução para Gradlew
        run: chmod +x ./gradlew

      - name: Configurar variáveis de ambiente para assinatura
        run: |
          echo "ANDROID_KEYSTORE_BASE64=${{ secrets.ANDROID_KEYSTORE_BASE64 }}" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "ANDROID_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Decodificar e armazenar o arquivo JKS
        run: |
          mkdir -p ~/.android
          echo $ANDROID_KEYSTORE_BASE64 | base64 --decode > ~/.android/keystore.jks
        shell: bash

      - name: Verificar se o arquivo JKS foi criado
        run: ls -la ~/.android/keystore.jks

      - name: Compilar APK de Release
        run: ./gradlew assembleRelease -Pandroid.injected.signing.store.file=$HOME/.android/keystore.jks -Pandroid.injected.signing.store.password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} -Pandroid.injected.signing.key.alias=${{ secrets.ANDROID_KEY_ALIAS }} -Pandroid.injected.signing.key.password=${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Criar Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Fazer upload do APK de Release para a Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
